{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "My API",
    "description": "Documentation automatically generated by the <b>swagger-autogen</b> module."
  },
  "host": "localhost:8077",
  "basePath": "/",
  "tags": [
    {
      "name": "User",
      "description": "Endpoints"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "securityDefinitions": {},
  "consumes": [
    "application/json"
  ],
  "produces": [],
  "paths": {
    "/users/signup": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "Endpoint for a user to signup",
        "parameters": [
          {
            "name": "email",
            "in": "body",
            "description": "User email",
            "required": true,
            "type": "string",
            "schema": {
              "type": "object",
              "properties": {
                "example": {
                  "type": "string",
                  "example": "antonio@gmail.com"
                }
              }
            }
          },
          {
            "name": "password",
            "in": "body",
            "description": "User password",
            "required": true,
            "type": "string",
            "schema": {
              "type": "object",
              "properties": {
                "example": {
                  "type": "string",
                  "example": "password"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 1234
                },
                "token": {
                  "type": "string",
                  "example": "token_string"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "406": {
            "description": "Not Acceptable"
          }
        }
      }
    },
    "/users/confirmation/{email}/{token}": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "Endpoint for a user to signup",
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "User email",
            "schema": {
              "type": "object",
              "properties": {
                "example": {
                  "type": "string",
                  "example": "antonio@gmail.com"
                }
              }
            }
          },
          {
            "name": "token",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Verification token",
            "schema": {
              "type": "object",
              "properties": {
                "example": {
                  "type": "string",
                  "example": "verification_token"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string",
                  "example": "User is verified."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "text": {
                  "type": "string",
                  "example": "Your verification link may have expired. Please use 'resend' endpoint to resend the verification link. Check API documentation for endpoint details."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "text": {
                  "type": "string",
                  "example": "We were unable to find a user for this verification. Please SignUp!"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "text": {
                  "type": "string",
                  "example": "[Database error]"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/users/confirmation/resend": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "Endpoint for a user to signup",
        "parameters": [
          {
            "name": "email",
            "in": "body",
            "description": "User email",
            "required": true,
            "type": "string",
            "schema": {
              "type": "object",
              "properties": {
                "example": {
                  "type": "string",
                  "example": "antonio@gmail.com"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "text": {
                  "type": "string",
                  "example": "This account has been already verified. Please log in."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "type": "object",
              "properties": {
                "text": {
                  "type": "string",
                  "example": "A verification email has been sent to [user.email]. It will be expire after one day. If you not get verification email, use 'resend' endpoint. Check API documentation for endpoint details."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "msg": {
                  "type": "string",
                  "example": "We were unable to find a user with that email. Make sure your Email is correct!"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "Endpoint for a user to login. Will get a token back if successful.",
        "parameters": [
          {
            "name": "email",
            "in": "body",
            "description": "User email",
            "required": true,
            "type": "string",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "antonio@gmail.com"
                }
              }
            }
          },
          {
            "name": "password",
            "in": "body",
            "description": "User password",
            "required": true,
            "type": "string",
            "schema": {
              "type": "object",
              "properties": {
                "password": {
                  "type": "string",
                  "example": "example"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string",
                  "example": "token_string"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Error: Unable to login"
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "Endpoint to get available information related to the user",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "allergies": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "isVerified": {
                  "type": "boolean",
                  "example": true
                },
                "likedRecipes": {
                  "type": "array",
                  "items": {}
                },
                "dislikedRecipes": {
                  "type": "array",
                  "items": {}
                },
                "_id": {
                  "type": "string",
                  "example": "user_id1"
                },
                "email": {
                  "type": "string",
                  "example": "example@gmail.com"
                },
                "token": {
                  "type": "string",
                  "example": "token_string"
                },
                "preferences": {
                  "type": "object",
                  "properties": {
                    "calRange": {
                      "type": "array",
                      "items": {
                        "type": "number"
                      }
                    },
                    "protRange": {
                      "type": "array",
                      "items": {}
                    },
                    "costRange": {
                      "type": "array",
                      "items": {}
                    },
                    "dietType": {
                      "type": "array",
                      "items": {}
                    },
                    "cookingTime": {
                      "type": "array",
                      "items": {}
                    },
                    "restrictions": {
                      "type": "array",
                      "items": {}
                    },
                    "_id": {
                      "type": "string",
                      "example": "preference_id"
                    },
                    "mealsPerDay": {
                      "type": "number",
                      "example": 10
                    },
                    "difficulty": {
                      "type": "string",
                      "example": "ExtraHard"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Please authenticate"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "User"
        ],
        "description": "Endpoint to update the user info that includes: username, age, gender, height, allergies, preferences",
        "parameters": [
          {
            "name": "username",
            "in": "body",
            "description": "Users username",
            "required": false,
            "type": "string",
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string",
                  "example": "boss"
                }
              }
            }
          },
          {
            "name": "age",
            "in": "body",
            "description": "User age",
            "required": false,
            "type": "number",
            "schema": {
              "type": "object",
              "properties": {
                "age": {
                  "type": "number",
                  "example": 20
                }
              }
            }
          },
          {
            "name": "height",
            "in": "body",
            "description": "User height in meters",
            "required": false,
            "type": "number",
            "schema": {
              "type": "object",
              "properties": {
                "height": {
                  "type": "number",
                  "example": 1.85
                }
              }
            }
          },
          {
            "name": "allergies",
            "in": "body",
            "description": "Users allergies. This value will overwrite the old allergies value of the user",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "schema": {
              "type": "object",
              "properties": {
                "allergies": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "name": "preferences",
            "in": "body",
            "description": "Users preferences update in the signup or anytime afterwards. Following fields can be added / updated: calRange, protRange, costRange, dietType,  cookingTime, restrictions, mealsPerDay, difficulty",
            "required": false,
            "type": "JSON object",
            "schema": {
              "type": "object",
              "properties": {
                "preferences": {
                  "type": "object",
                  "properties": {
                    "mealsPerDay": {
                      "type": "number",
                      "example": 10
                    },
                    "calRange": {
                      "type": "array",
                      "items": {
                        "type": "number"
                      }
                    },
                    "difficulty": {
                      "type": "string",
                      "example": "ExtraHard"
                    }
                  }
                }
              }
            }
          },
          {
            "name": "gender",
            "in": "body",
            "description": "Users gender which can be: male, female, other",
            "required": false,
            "type": "string",
            "schema": {
              "type": "object",
              "properties": {
                "gender": {
                  "type": "string",
                  "example": "female"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "type": "object",
              "properties": {
                "allergies": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "isVerified": {
                  "type": "boolean",
                  "example": true
                },
                "likedRecipes": {
                  "type": "array",
                  "items": {}
                },
                "dislikedRecipes": {
                  "type": "array",
                  "items": {}
                },
                "_id": {
                  "type": "string",
                  "example": "606db95f4aba966eccd85648"
                },
                "email": {
                  "type": "string",
                  "example": "perman.atayev17@gmail.com"
                },
                "token": {
                  "type": "string",
                  "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MDZkYjk1ZjRhYmE5NjZlY2NkODU2NDgiLCJpYXQiOjE2MTc4MDM2MTUsImV4cCI6MTYxNzgwNzIxNX0.9hbXeasTPBVvqhaz9AdYZBdZ4HR1vODjlx3ks7Y1nmU"
                },
                "preferences": {
                  "type": "object",
                  "properties": {
                    "calRange": {
                      "type": "array",
                      "items": {
                        "type": "number"
                      }
                    },
                    "protRange": {
                      "type": "array",
                      "items": {}
                    },
                    "costRange": {
                      "type": "array",
                      "items": {}
                    },
                    "dietType": {
                      "type": "array",
                      "items": {}
                    },
                    "cookingTime": {
                      "type": "array",
                      "items": {}
                    },
                    "restrictions": {
                      "type": "array",
                      "items": {}
                    },
                    "_id": {
                      "type": "string",
                      "example": "606dbf8426bac5635c7bd255"
                    },
                    "mealsPerDay": {
                      "type": "number",
                      "example": 10
                    },
                    "difficulty": {
                      "type": "string",
                      "example": "ExtraHard"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "text": {
                  "type": "string",
                  "example": "Error: Field email is not allowed to be updated or does not exist"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/users/liked_recipes": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "Endpoint for a user to list the recipe",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "recipe_name1"
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "text": {
                  "type": "string",
                  "example": "Recipes were not found + [error]"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/users/liked_ingredient_frequencies": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "Endpoint for a user to list the ingredient frequency of liked meals",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "ingredient1": {
                  "type": "number",
                  "example": 5
                },
                "ingredient2": {
                  "type": "number",
                  "example": 2
                },
                "ingredient3": {
                  "type": "number",
                  "example": 1
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "text": {
                  "type": "string",
                  "example": "Database error + [error]"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/db/drop": {
      "delete": {
        "tags": [
          "DB"
        ],
        "description": "Drop a database",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/db/addMeal": {
      "post": {
        "tags": [
          "DB"
        ],
        "description": "Add a meal to the db and store the image in s3.",
        "parameters": [],
        "responses": {
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/meals/generate": {
      "post": {
        "tags": [
          "Meal"
        ],
        "description": "generate a meal",
        "parameters": [],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/recipes/migrate_all": {
      "get": {
        "tags": [
          "Recipe"
        ],
        "description": "Endpoint to transport the images of all the remaining recipes to S3 storage",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "type": "object",
              "properties": {
                "text": {
                  "type": "string",
                  "example": "All migrated"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "text": {
                  "type": "string",
                  "example": "Permission Denied!"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "406": {
            "description": "Not Acceptable",
            "schema": {
              "type": "object",
              "properties": {
                "text": {
                  "type": "string",
                  "example": "Database error: [error]"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/recipes/migrate_to_s3": {
      "get": {
        "tags": [
          "Recipe"
        ],
        "description": "Endpoint to transport the image of a recipe to S3 storage",
        "parameters": [
          {
            "name": "recipe_name",
            "in": "body",
            "description": "Recipe name",
            "required": true,
            "type": "string",
            "schema": {
              "type": "object",
              "properties": {
                "example": {
                  "type": "string",
                  "example": "Menemen"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "type": "object",
              "properties": {
                "text": {
                  "type": "string",
                  "example": "All migrated"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "text": {
                  "type": "string",
                  "example": "Permission Denied!"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "text": {
                  "type": "string",
                  "example": "Recipe was not found"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "406": {
            "description": "Not Acceptable",
            "schema": {
              "type": "object",
              "properties": {
                "text": {
                  "type": "string",
                  "example": "Database error: [error]"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/recipes/nutrition_filter": {
      "post": {
        "tags": [
          "Recipe"
        ],
        "description": "Endpoint to find a recipe with nutrition constraints",
        "parameters": [
          {
            "name": "type",
            "in": "body",
            "description": "Recipe name",
            "required": true,
            "type": "string",
            "schema": {
              "type": "object",
              "properties": {
                "example": {
                  "type": "string",
                  "example": "Breakfast"
                }
              }
            }
          },
          {
            "name": "calories",
            "in": "body",
            "description": "Recipe name",
            "required": true,
            "type": "integer",
            "schema": {
              "type": "object",
              "properties": {
                "example": {
                  "type": "number",
                  "example": 2000
                }
              }
            }
          },
          {
            "name": "protein",
            "in": "body",
            "description": "Recipe name",
            "required": true,
            "type": "integer",
            "schema": {
              "type": "object",
              "properties": {
                "example": {
                  "type": "number",
                  "example": 200
                }
              }
            }
          },
          {
            "name": "carbs",
            "in": "body",
            "description": "Recipe name",
            "required": true,
            "type": "integer",
            "schema": {
              "type": "object",
              "properties": {
                "example": {
                  "type": "number",
                  "example": 100
                }
              }
            }
          },
          {
            "name": "fat",
            "in": "body",
            "description": "Recipe name",
            "required": true,
            "type": "integer",
            "schema": {
              "type": "object",
              "properties": {
                "example": {
                  "type": "number",
                  "example": 50
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "type": "object",
              "properties": {
                "imgPath": {
                  "type": "string",
                  "example": ""
                },
                "servingSize": {
                  "type": "number",
                  "example": 4
                },
                "instructions": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "likedUsers": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "oid": {
                        "type": "string",
                        "example": "user_id"
                      }
                    },
                    "required": [
                      "oid"
                    ]
                  }
                },
                "numberOfLikes": {
                  "type": "number",
                  "example": 2
                },
                "type": {
                  "type": "string",
                  "example": "lunch"
                },
                "name": {
                  "type": "string",
                  "example": "C"
                },
                "prepTime": {
                  "type": "number",
                  "example": 55
                },
                "cookTime": {
                  "type": "number",
                  "example": 35
                },
                "ingredients": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "object",
                        "properties": {
                          "oid": {
                            "type": "string",
                            "example": "ingredient_id2"
                          }
                        },
                        "required": [
                          "oid"
                        ]
                      },
                      "text": {
                        "type": "string",
                        "example": "1 tbsp of sugar and a lot of salt"
                      },
                      "unit": {
                        "type": "string",
                        "example": "tbsp"
                      },
                      "name": {
                        "type": "string",
                        "example": "sugar"
                      },
                      "originID": {
                        "type": "object",
                        "properties": {
                          "oid": {
                            "type": "string",
                            "example": "ingredient_original_id2"
                          }
                        },
                        "required": [
                          "oid"
                        ]
                      }
                    }
                  }
                },
                "__v": {
                  "type": "number",
                  "example": 1
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "text": {
                  "type": "string",
                  "example": "Permission Denied!"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "text": {
                  "type": "string",
                  "example": "Recipe with required nutritions was not found"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "406": {
            "description": "Not Acceptable",
            "schema": {
              "type": "object",
              "properties": {
                "text": {
                  "type": "string",
                  "example": "Something went wrong with find a recipe"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/recipes": {
      "post": {
        "tags": [
          "Recipe"
        ],
        "description": "Endpoint to add a recipe",
        "parameters": [
          {
            "name": "name",
            "in": "body",
            "description": "Recipe name",
            "required": true,
            "type": "string",
            "schema": {
              "type": "object",
              "properties": {
                "example": {
                  "type": "string",
                  "example": "Menemen"
                }
              }
            }
          },
          {
            "name": "prepTime",
            "in": "body",
            "description": "Recipe preperation time",
            "required": true,
            "type": "integer",
            "schema": {
              "type": "object",
              "properties": {
                "example": {
                  "type": "number",
                  "example": 30
                }
              }
            }
          },
          {
            "name": "cookTime",
            "in": "body",
            "description": "Recipe cook time",
            "required": true,
            "type": "integer",
            "schema": {
              "type": "object",
              "properties": {
                "example": {
                  "type": "number",
                  "example": 50
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "type": "object",
              "properties": {
                "text": {
                  "type": "string",
                  "example": "Recipe is added"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "text": {
                  "type": "string",
                  "example": "Did not add the recipe"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "get": {
        "tags": [
          "Recipe"
        ],
        "description": "Endpoint for a user to get a Recipe / meal recommendation. If user has saved information about the preferred number of meals per day, that \\\rnumber will be used. Otherwise if limit is passed as a path parameter it will be used. If that is also not passed, then a constant number 3 will be used.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "the List of all recipe names is returned"
          },
          "400": {
            "description": "Either no recipe or no authorization"
          }
        }
      }
    },
    "/recipes/recommendation": {
      "get": {
        "tags": [
          "Recipe"
        ],
        "description": "Endpoint for a user to get a Recipe / meal recommendation. If user has saved information about the preferred number of meals per day, that \\\rnumber will be used. Otherwise if limit is passed as a path parameter it will be used. If that is also not passed, then a constant number 3 will be used.",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "maximum number of recipes to return",
            "required": false,
            "type": "string",
            "schema": {
              "type": "object",
              "properties": {
                "limit": {
                  "type": "string",
                  "example": "2"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of recipe names is returned"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/recipes/{recipeName}": {
      "get": {
        "tags": [
          "Recipe"
        ],
        "description": "Endpoint to find a recipe with it",
        "parameters": [
          {
            "name": "recipeName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "Recipe name",
            "required": true,
            "type": "string",
            "schema": {
              "type": "object",
              "properties": {
                "example": {
                  "type": "string",
                  "example": "Menemen"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "schema": {
              "type": "object",
              "properties": {
                "imgPath": {
                  "type": "string",
                  "example": ""
                },
                "servingSize": {
                  "type": "number",
                  "example": 4
                },
                "instructions": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "likedUsers": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "oid": {
                        "type": "string",
                        "example": "user_id"
                      }
                    },
                    "required": [
                      "oid"
                    ]
                  }
                },
                "numberOfLikes": {
                  "type": "number",
                  "example": 2
                },
                "type": {
                  "type": "string",
                  "example": "lunch"
                },
                "name": {
                  "type": "string",
                  "example": "C"
                },
                "prepTime": {
                  "type": "number",
                  "example": 55
                },
                "cookTime": {
                  "type": "number",
                  "example": 35
                },
                "ingredients": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "object",
                        "properties": {
                          "oid": {
                            "type": "string",
                            "example": "ingredient_id2"
                          }
                        },
                        "required": [
                          "oid"
                        ]
                      },
                      "text": {
                        "type": "string",
                        "example": "1 tbsp of sugar and a lot of salt"
                      },
                      "unit": {
                        "type": "string",
                        "example": "tbsp"
                      },
                      "name": {
                        "type": "string",
                        "example": "sugar"
                      },
                      "originID": {
                        "type": "object",
                        "properties": {
                          "oid": {
                            "type": "string",
                            "example": "ingredient_original_id2"
                          }
                        },
                        "required": [
                          "oid"
                        ]
                      }
                    }
                  }
                },
                "__v": {
                  "type": "number",
                  "example": 1
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "text": {
                  "type": "string",
                  "example": "Permission Denied!"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "text": {
                  "type": "string",
                  "example": "Recipe with this name is not found"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "406": {
            "schema": {
              "type": "object",
              "properties": {
                "text": {
                  "type": "string",
                  "example": "[error] Something went wrong with finding a recipe"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "Not Acceptable"
          }
        }
      }
    },
    "/recipes/like/{recipeName}": {
      "post": {
        "tags": [
          "Recipe"
        ],
        "description": "Endpoint for a user to like a recipe",
        "parameters": [
          {
            "name": "recipeName",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Name of the recipe to be liked",
            "schema": {
              "type": "object",
              "properties": {
                "example": {
                  "type": "string",
                  "example": "Pasta with mozarella cheese"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "text": {
                  "type": "string",
                  "example": "The meal is liked successfully"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "text": {
                  "type": "string",
                  "example": "The meal is already liked"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "text": {
                  "type": "string",
                  "example": "Recipe does not exist"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/recipes/top/{numberOfRecipes}": {
      "get": {
        "tags": [
          "Recipe"
        ],
        "description": "Endpoint to get top K recipes for the moment when user signup happens",
        "parameters": [
          {
            "name": "numberOfRecipes",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "Number of recipes",
            "schema": {
              "type": "object",
              "properties": {
                "example": {
                  "type": "number",
                  "example": 15
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "imgPath": {
                    "type": "string",
                    "example": ""
                  },
                  "servingSize": {
                    "type": "number",
                    "example": 4
                  },
                  "instructions": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "likedUsers": {
                    "type": "array",
                    "items": {}
                  },
                  "numberOfLikes": {
                    "type": "number",
                    "example": 0
                  },
                  "_id": {
                    "type": "string",
                    "example": "recipe_id"
                  },
                  "type": {
                    "type": "string",
                    "example": "lunch"
                  },
                  "name": {
                    "type": "string",
                    "example": "A"
                  },
                  "prepTime": {
                    "type": "number",
                    "example": 55
                  },
                  "cookTime": {
                    "type": "number",
                    "example": 35
                  },
                  "ingredients": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string",
                          "example": "ingredient_id2"
                        },
                        "text": {
                          "type": "string",
                          "example": "1 tbsp of sugar and a lot of salt"
                        },
                        "unit": {
                          "type": "string",
                          "example": "tbsp"
                        },
                        "name": {
                          "type": "string",
                          "example": "sugar"
                        },
                        "originID": {
                          "type": "string",
                          "example": "ingredient_original_id2"
                        }
                      }
                    }
                  },
                  "__v": {
                    "type": "number",
                    "example": 0
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/recipes/prefill": {
      "post": {
        "tags": [
          "Recipe"
        ],
        "description": "Endpoint to add the recipes in local to db",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "text": {
                  "type": "string",
                  "example": "Recipes are added!"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/ingredients": {
      "post": {
        "tags": [
          "Ingredient"
        ],
        "description": "Endpoint to add a ingredient",
        "parameters": [
          {
            "name": "name",
            "in": "body",
            "description": "Name of the ingredient",
            "required": true,
            "type": "string",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Salt"
                }
              }
            }
          },
          {
            "name": "originID",
            "in": "body",
            "description": "Id of the original ingredient",
            "required": true,
            "type": "string",
            "schema": {
              "type": "object",
              "properties": {
                "originID": {
                  "type": "string",
                  "example": "c456x46xsa67x6a45"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The ingredient is added succesfully"
          },
          "400": {
            "description": "Could not add the ingredient. [error]"
          }
        }
      }
    },
    "/ingredients/{ingredientName}": {
      "patch": {
        "tags": [],
        "description": "",
        "parameters": [
          {
            "name": "ingredientName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {}
      }
    }
  },
  "definitions": {}
}
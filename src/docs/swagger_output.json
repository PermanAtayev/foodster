{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "My API",
    "description": "Documentation automatically generated by the <b>swagger-autogen</b> module."
  },
  "host": "localhost:8077",
  "basePath": "/",
  "tags": [
    {
      "name": "User",
      "description": "Endpoints"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "securityDefinitions": {},
  "consumes": [
    "application/json"
  ],
  "produces": [],
  "paths": {
    "/users/signup": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "Endpoint for a user to signup",
        "parameters": [
          {
            "name": "email",
            "in": "body",
            "description": "User email",
            "required": true,
            "type": "string",
            "schema": {
              "type": "object",
              "properties": {
                "example": {
                  "type": "string",
                  "example": "antonio@gmail.com"
                }
              }
            }
          },
          {
            "name": "password",
            "in": "body",
            "description": "User password",
            "required": true,
            "type": "string",
            "schema": {
              "type": "object",
              "properties": {
                "example": {
                  "type": "string",
                  "example": "password"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 1234
                },
                "token": {
                  "type": "string",
                  "example": "token_string"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "406": {
            "description": "Not Acceptable"
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "Endpoint for a user to login. Will get a token back if successful.",
        "parameters": [
          {
            "name": "email",
            "in": "body",
            "description": "User email",
            "required": true,
            "type": "string",
            "schema": {
              "type": "object",
              "properties": {
                "example": {
                  "type": "string",
                  "example": "antonio@gmail.com"
                }
              }
            }
          },
          {
            "name": "password",
            "in": "body",
            "description": "User password",
            "required": true,
            "type": "string",
            "schema": {
              "type": "object",
              "properties": {
                "example": {
                  "type": "string",
                  "example": "password"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string",
                  "example": "token_string"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Error: Unable to login"
          }
        }
      }
    },
    "/users/updateinfo": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "Endpoint to update the user info",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/users/likeRecipe": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "Endpoint for a user to like a recipe",
        "parameters": [
          {
            "name": "recipeName",
            "in": "body",
            "description": "Name of the recipe to be liked",
            "required": true,
            "type": "string",
            "schema": {
              "type": "object",
              "properties": {
                "example": {
                  "type": "string",
                  "example": "Pasta with mozarella cheese"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "text": {
                  "type": "string",
                  "example": "The meal is liked successfully"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "text": {
                  "type": "string",
                  "example": "The meal is already liked"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "text": {
                  "type": "string",
                  "example": "Recipe does not exist"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/users/myLikedRecipes": {
      "get": {
        "tags": [],
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/users/myLikedIngredientFrequencies": {
      "get": {
        "tags": [],
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/users/list": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "Endpoint to get a list of users, requires authentication.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/users/deleteAll": {
      "delete": {
        "tags": [
          "User"
        ],
        "description": "Endpoint to delete all users",
        "parameters": [],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/db/drop": {
      "delete": {
        "tags": [
          "DB"
        ],
        "description": "Drop a database",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/db/addMeal": {
      "post": {
        "tags": [
          "DB"
        ],
        "description": "Add a meal to the db and store the image in s3.",
        "parameters": [],
        "responses": {
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/meals/generate": {
      "post": {
        "tags": [
          "Meal"
        ],
        "description": "generate a meal",
        "parameters": [],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/recipes/migrateAll": {
      "get": {
        "tags": [],
        "description": "",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "406": {
            "description": "Not Acceptable"
          }
        }
      }
    },
    "/recipes/migrateToS3": {
      "get": {
        "tags": [],
        "description": "",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          }
        }
      }
    },
    "/recipes/nameFilter": {
      "post": {
        "tags": [
          "Recipe"
        ],
        "description": "Find details of a recipe using its name",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          }
        }
      }
    },
    "/recipes/nutritionFilter": {
      "post": {
        "tags": [
          "Recipe"
        ],
        "description": "Filter a recipe according to its nutritional info",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          }
        }
      }
    },
    "/recipes/addRecipe": {
      "post": {
        "tags": [],
        "description": "",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/recipes/getRecipeRecommendation": {
      "get": {
        "tags": [],
        "description": "",
        "parameters": [
          {
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/recipes/{recipeName}": {
      "get": {
        "tags": [],
        "description": "",
        "parameters": [
          {
            "name": "recipeName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/recipes/top/{numberOfRecipes}": {
      "get": {
        "tags": [
          "Recipe"
        ],
        "description": "Endpoint to get top K recipes for the moment when user signup happens",
        "parameters": [
          {
            "name": "numberOfRecipes",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "imgPath": {
                  "type": "string",
                  "example": ""
                },
                "servingSize": {
                  "type": "number",
                  "example": 4
                },
                "instructions": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "likedUsers": {
                  "type": "array",
                  "items": {}
                },
                "numberOfLikes": {
                  "type": "number",
                  "example": 0
                },
                "_id": {
                  "type": "string",
                  "example": "606c754439dada0e70e438d4"
                },
                "type": {
                  "type": "string",
                  "example": "lunch"
                },
                "name": {
                  "type": "string",
                  "example": "A"
                },
                "prepTime": {
                  "type": "number",
                  "example": 55
                },
                "cookTime": {
                  "type": "number",
                  "example": 35
                },
                "ingredients": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string",
                        "example": "606c754439dada0e70e438d6"
                      },
                      "text": {
                        "type": "string",
                        "example": "1 tbsp of sugar and a lot of salt"
                      },
                      "unit": {
                        "type": "string",
                        "example": "tbsp"
                      },
                      "name": {
                        "type": "string",
                        "example": "sugar"
                      },
                      "originID": {
                        "type": "string",
                        "example": "606c754439dada0e70e438d3"
                      }
                    }
                  }
                },
                "__v": {
                  "type": "number",
                  "example": 0
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/recipes/prefillRecipes": {
      "post": {
        "tags": [],
        "description": "",
        "parameters": [],
        "responses": {}
      }
    }
  },
  "definitions": {}
}